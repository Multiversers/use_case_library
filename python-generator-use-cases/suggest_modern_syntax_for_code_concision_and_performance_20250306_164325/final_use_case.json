{
  "content": "{\n  \"title\": \"Suggest modern syntax for code concision and performance\",\n  \"time_to_complete\": \"20 minutes\",\n  \"description\": \"Use AI coding assistants to analyze your existing code and suggest modern language features and optimizations. This will help you make your code concise and perform better, bridging the gap between older codebases and new language standards.\",\n  \"steps\": [\n    {\n      \"step_title\": \"Set up your development environment\",\n      \"step_instructions\": \"Make sure your development environment is ready with Visual Studio Code or Visual Studio 2022 (v17.13+) and GitHub Copilot. Open your editor, confirm that Copilot is enabled, and choose Claude Sonnet 3.7 from the model picker. This setup should take about 3 minutes.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Key actions\",\n          \"description\": null,\n          \"bullets\": [\n            \"Verify installation of VS Code/Visual Studio\",\n            \"Open the GitHub Copilot chat window\",\n            \"Select Claude Sonnet 3.7 using the model picker\"\n          ]\n        }\n      ],\n      \"advice\": \"Ensure your installation is up-to-date and configured correctly to access advanced features.\"\n    },\n    {\n      \"step_title\": \"Analyze legacy code\",\n      \"step_instructions\": \"Use GitHub Copilot and Claude Sonnet 3.7 to perform static analysis on your old code. Look for outdated constructs or verbose patterns to refactor. Spend about 5 minutes on this task.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Key analysis points\",\n          \"description\": null,\n          \"bullets\": [\n            \"Identify repetitive code patterns\",\n            \"Locate inefficient algorithms\",\n            \"Spot deprecated language constructs\"\n          ]\n        }\n      ],\n      \"advice\": \"Focus on critical sections of the code that would benefit most from modernization.\"\n    },\n    {\n      \"step_title\": \"Generate refactoring suggestions\",\n      \"step_instructions\": \"Ask the AI coding assistants to suggest modern syntax improvements for sections of your old code. For instance, ask 'How can I refactor this code to use modern Python 3.9+ syntax?' Plan to spend around 5 minutes on this.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Prompting strategy\",\n          \"description\": null,\n          \"bullets\": [\n            \"Use the chat interface to provide context\",\n            \"Specify the target language version and desired improvements\",\n            \"Request explanations for the suggested changes\"\n          ]\n        }\n      ],\n      \"advice\": \"Combine GitHub Copilot\\u2019s quick completions with Claude Sonnet 3.7\\u2019s detailed analysis for optimal suggestions.\"\n    },\n    {\n      \"step_title\": \"Apply and benchmark changes\",\n      \"step_instructions\": \"Implement the AI-suggested changes in small steps. Test to ensure everything works and benchmark improvements in code concision and performance. Set aside about 5 minutes for this.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Implementation steps\",\n          \"description\": null,\n          \"bullets\": [\n            \"Apply changes in small increments\",\n            \"Run tests to verify functionality\",\n            \"Benchmark performance metrics such as code length, cyclomatic complexity, and runtime efficiency\"\n          ]\n        }\n      ],\n      \"advice\": \"Monitor performance metrics closely and revert any changes that negatively impact performance.\"\n    },\n    {\n      \"step_title\": \"Document and commit\",\n      \"step_instructions\": \"Use AI-generated insights to update documentation and add comments explaining the refactored code. Finish with a clear commit message. This should take around 2 minutes.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Documentation actions\",\n          \"description\": null,\n          \"bullets\": [\n            \"Update code comments to reflect modernized syntax\",\n            \"Document refactoring decisions and performance benefits\",\n            \"Commit changes with clear and detailed messages\"\n          ]\n        }\n      ],\n      \"advice\": \"Good documentation aids team understanding and ensures maintainability of the modernized code.\"\n    }\n  ],\n  \"resources\": [\n    \"https://docs.github.com/en/copilot/using-github-copilot/ai-models/using-claude-sonnet-in-github-copilot\",\n    \"https://docs.github.com/en/copilot/copilot-chat-cookbook/refactoring-code/refactoring-for-performance-optimization\"\n  ],\n  \"metadata\": {\n    \"id\": \"\",\n    \"title\": \"Suggest modern syntax for code concision and performance\",\n    \"family\": \"Core Skills\",\n    \"ai_tool\": \"Coding Assistants\",\n    \"objective\": \"Leverage GitHub Copilot and Claude Sonnet 3.7 to identify and implement modern language features that transform legacy code into more concise, performant implementations without requiring extensive research into evolving language standards.\",\n    \"description\": \"Bridge the knowledge gap between established codebases and evolving language standards by using AI coding assistants to analyze existing code and suggest modern language features, patterns, and optimizations that increase code concision while enhancing performance, allowing developers to modernize their code without extensive research..\",\n    \"prerequisites\": [\n      \"Writing clear code comments\",\n      \"Understanding code structure\",\n      \"Basic algorithmic thinking\",\n      \"Familiarity with code completion tools\",\n      \"Basic understanding of natural language processing\"\n    ],\n    \"time_estimate\": \"20 minutes\",\n    \"steps\": [],\n    \"tool\": \"GitHub Copilot\",\n    \"department\": [\n      \"SWE\"\n    ],\n    \"role\": [\n      \"agnostic\"\n    ],\n    \"mode\": \"agentic\",\n    \"model\": \"claude-sonnet-3.7\",\n    \"coding_language\": \"agnostic\"\n  },\n  \"citations\": [\n    {\n      \"url\": \"https://devblogs.microsoft.com/visualstudio/claude-3-7-now-available-in-github-copilot-for-visual-studio/\",\n      \"title\": \"Claude 3.7 Now Available in GitHub Copilot for Visual Studio - Visual Studio Blog\",\n      \"snippet\": null,\n      \"relevance_score\": 0.9\n    },\n    {\n      \"url\": \"https://www.anthropic.com/news/github-copilot\",\n      \"title\": \"Claude 3.5 Sonnet on GitHub Copilot - Anthropic\",\n      \"snippet\": null,\n      \"relevance_score\": 0.8\n    },\n    {\n      \"url\": \"https://www.youtube.com/watch?v=LHVLyqc_WBM\",\n      \"title\": \"Demo: Using Claude 3.7 Sonnet with GitHub Copilot - YouTube\",\n      \"snippet\": null,\n      \"relevance_score\": 0.9\n    },\n    {\n      \"url\": \"https://devops.com/10-key-features-of-ai-code-assistants/\",\n      \"title\": \"10 Key Features of AI Code Assistants - DevOps.com\",\n      \"snippet\": null,\n      \"relevance_score\": 0.8\n    }\n  ]\n}"
}