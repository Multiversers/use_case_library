{
  "content": "{\n  \"title\": \"Craft Effective Code Prompts for AI Assistance\",\n  \"time_to_complete\": \"20 minutes\",\n  \"description\": \"This use case guides you on how to use AI tools by writing precise comments and docstrings that serve as effective prompts for automated code generation. By following research-backed guidelines, you will learn to create clear, detailed function descriptions and specific TODO comments to express your algorithmic intent. This process highlights the importance of natural language clarity, iterative prompt refinement, and validating AI-generated outputs to ensure they match your original intent.\",\n  \"steps\": [\n    {\n      \"step_title\": \"Write detailed function docstring\",\n      \"step_instructions\": \"Compose a comprehensive docstring that explains the function's purpose, parameters, return values, and usage examples. Ensure your description is clear and concise to guide the AI effectively.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Clear function purpose\",\n          \"description\": \"Begin with a high-level overview of what the function does.\",\n          \"bullets\": [\n            \"Provide a concise summary.\",\n            \"State the main responsibility of the function.\"\n          ]\n        },\n        {\n          \"title\": \"Parameter details\",\n          \"description\": \"List each parameter with its type, acceptable range, and purpose.\",\n          \"bullets\": [\n            \"Include default values if applicable.\",\n            \"Clarify expected input for each parameter.\"\n          ]\n        },\n        {\n          \"title\": \"Return values\",\n          \"description\": \"Describe the format and type of the value returned by the function.\",\n          \"bullets\": [\n            \"Indicate any special cases or edge conditions.\",\n            \"Provide clarity on the expected output.\"\n          ]\n        }\n      ],\n      \"advice\": \"Ensure that your docstring adheres to common documentation conventions and serves as a clear prompt for AI code generation.\"\n    },\n    {\n      \"step_title\": \"Add specific TODO comments\",\n      \"step_instructions\": \"Insert inline TODO comments that outline specific algorithmic requirements and constraints. Use clear language to define the tasks that need to be completed.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Specific action items\",\n          \"description\": \"Detail what needs to be implemented with clear and actionable instructions.\",\n          \"bullets\": [\n            \"List precise tasks to be completed.\",\n            \"Avoid vague descriptions.\"\n          ]\n        },\n        {\n          \"title\": \"Context and constraints\",\n          \"description\": \"Provide background information and mention any constraints related to the algorithm.\",\n          \"bullets\": [\n            \"Include performance or error handling requirements.\",\n            \"Reference relevant documentation if necessary.\"\n          ]\n        }\n      ],\n      \"advice\": \"Detailed TODO comments guide the AI to generate code that meets your original specifications.\"\n    },\n    {\n      \"step_title\": \"Describe complex logic in natural language\",\n      \"step_instructions\": \"Before implementation, write out the logic behind complex parts in plain language to ensure that the AI understands the intended approach.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Break down the logic\",\n          \"description\": \"Outline the sequential steps of the algorithm in simple language.\",\n          \"bullets\": [\n            \"Explain the reasoning behind each step.\",\n            \"Detail expected behavior and edge cases.\"\n          ]\n        }\n      ],\n      \"advice\": \"This approach enhances AI understanding and leads to more accurate code generation for complex tasks.\"\n    },\n    {\n      \"step_title\": \"Refine your prompts based on initial output\",\n      \"step_instructions\": \"Review the AI-generated code and adjust your prompts by adding more details or clarifications to address any shortcomings.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Review initial output\",\n          \"description\": \"Analyze the first version of the generated code to spot any misalignments with your intended functionality.\",\n          \"bullets\": [\n            \"Identify missing features or discrepancies.\",\n            \"Note areas that require more detail.\"\n          ]\n        },\n        {\n          \"title\": \"Iterative improvement\",\n          \"description\": \"Modify your prompts and comments based on the review to refine the generated output.\",\n          \"bullets\": [\n            \"Incorporate targeted feedback into your comments.\",\n            \"Focus on specific aspects that need clarification.\"\n          ]\n        }\n      ],\n      \"advice\": \"Iterative refinement of your prompts greatly enhances the accuracy and quality of the AI-generated code.\"\n    },\n    {\n      \"step_title\": \"Validate the generated code\",\n      \"step_instructions\": \"Test and review the AI-generated code to ensure it meets the functional, quality, and performance requirements.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"Conduct code review\",\n          \"description\": \"Manually review the code for correctness, readability, and adherence to coding standards.\",\n          \"bullets\": [\n            \"Inspect for any errors or oversights.\",\n            \"Ensure the documentation is complete.\"\n          ]\n        },\n        {\n          \"title\": \"Perform testing\",\n          \"description\": \"Develop and run test cases to verify that the code works as expected under various scenarios.\",\n          \"bullets\": [\n            \"Use unit tests and integration tests.\",\n            \"Evaluate performance and edge case handling.\"\n          ]\n        }\n      ],\n      \"advice\": \"Thorough validation through review and testing ensures that the AI-generated code aligns perfectly with your original intent.\"\n    }\n  ],\n  \"resources\": [\n    \"https://docs.github.com/en/copilot/using-github-copilot/best-practices-for-using-github-copilot\",\n    \"https://docs.github.com/en/copilot/using-github-copilot/copilot-chat/prompt-engineering-for-copilot-chat\",\n    \"https://github.blog/developer-skills/github/how-to-write-better-prompts-for-github-copilot/\"\n  ],\n  \"metadata\": {\n    \"id\": \"CORE-02\",\n    \"title\": \"Craft Effective Code Prompts for AI Assistance\",\n    \"family\": \"Core Skills\",\n    \"ai_tool\": \"Coding Assistants\",\n    \"objective\": \"Enable developers to effectively communicate programming intent through structured comments that trigger accurate AI code generation\",\n    \"description\": \"This use case trains developers to harness AI tooling by writing precise comments and docstrings that function as prompts for automated code generation. It emphasizes the importance of natural language clarity in directives (e.g., docstrings and TODOs) and guides participants to refine prompts as needed while validating AI-generated outputs against the original intent.\",\n    \"prerequisites\": [\n      \"Writing clear code comments\",\n      \"Understanding code structure\",\n      \"Basic algorithmic thinking\",\n      \"Familiarity with code completion tools\",\n      \"Basic understanding of natural language processing\"\n    ],\n    \"time_estimate\": \"20 minutes\",\n    \"steps\": [\n      \"Write a detailed function description in docstring format\",\n      \"Add TODO comments with specific algorithm requirements\",\n      \"Use natural language to describe complex logic before implementation\",\n      \"Refine prompts based on initial AI outputs\",\n      \"Validate generated code against original intent\"\n    ],\n    \"tool\": \"GitHub Copilot\",\n    \"department\": [\n      \"SWE\"\n    ],\n    \"role\": [\n      \"front-end\"\n    ],\n    \"mode\": \"inline chat\",\n    \"model\": \"GPT-4o\",\n    \"coding_language\": \"Python\"\n  },\n  \"citations\": [\n    {\n      \"url\": \"https://community.openai.com/t/a-guide-to-crafting-effective-prompts-for-diverse-applications/493914\",\n      \"title\": \"A Guide to Crafting Effective Prompts for Diverse Applications - OpenAI Developer Community\",\n      \"snippet\": null,\n      \"relevance_score\": 0.9\n    },\n    {\n      \"url\": \"https://mitsloanedtech.mit.edu/ai/basics/effective-prompts/\",\n      \"title\": \"Effective Prompts for AI: The Essentials - MIT Sloan Teaching & Learning Technologies\",\n      \"snippet\": null,\n      \"relevance_score\": 0.9\n    },\n    {\n      \"url\": \"https://leaddev.com/velocity/how-write-better-ai-prompts\",\n      \"title\": \"How to write better AI prompts - LeadDev\",\n      \"snippet\": null,\n      \"relevance_score\": 0.85\n    },\n    {\n      \"url\": \"https://hatchworks.com/blog/gen-ai/generative-ai-prompt-guide/\",\n      \"title\": \"Expert\\u2019s Guide: Generative AI Prompts for Maximum Efficiency\",\n      \"snippet\": null,\n      \"relevance_score\": 0.85\n    },\n    {\n      \"url\": \"https://www.codecademy.com/article/ai-prompting-best-practices\",\n      \"title\": \"AI Prompting Best Practices | Codecademy\",\n      \"snippet\": null,\n      \"relevance_score\": 0.8\n    },\n    {\n      \"url\": \"https://codesignal.com/learn/courses/clean-code-basics-with-python/lessons/comments-and-documentation-in-python\",\n      \"title\": \"Comments and Documentation in Python | CodeSignal Learn\",\n      \"snippet\": null,\n      \"relevance_score\": 0.75\n    },\n    {\n      \"url\": \"https://www.sonarsource.com/learn/ai-code-generation-benefits-risks/\",\n      \"title\": \"AI Code Generation Benefits & Risks | Sonar\",\n      \"snippet\": null,\n      \"relevance_score\": 0.7\n    },\n    {\n      \"url\": \"https://www.huit.harvard.edu/news/ai-prompts\",\n      \"title\": \"Getting started with prompts for text-based Generative AI tools | Harvard University Information Technology\",\n      \"snippet\": null,\n      \"relevance_score\": 0.8\n    },\n    {\n      \"url\": \"https://www.youtube.com/watch?v=aviT9zbqF5o\",\n      \"title\": \"Validating AI-Generated Code with Live Programming - YouTube\",\n      \"snippet\": null,\n      \"relevance_score\": 0.7\n    },\n    {\n      \"url\": \"https://dev.to/bsorrentino/genaiscript-comment-code-with-ai-509f\",\n      \"title\": \"GenAIScript - Comment Code with AI - DEV Community\",\n      \"snippet\": null,\n      \"relevance_score\": 0.75\n    }\n  ]\n}"
}