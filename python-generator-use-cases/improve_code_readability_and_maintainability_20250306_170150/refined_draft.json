{
  "content": "{\n  \"title\": \"Improve code readability and maintainability\",\n  \"time_to_complete\": \"25 minutes\",\n  \"description\": \"Refactor existing code to improve its readability and maintainability. This use case aims to make the codebase easier to understand and modify, reducing technical debt and improving long-term productivity. Leverage GitHub Copilot and Claude Sonnet 3.7 to identify and implement modern coding patterns, suggest clearer variable names and function structures, and refactor complex code blocks into more maintainable components with clear, context-aware explanations.\",\n  \"steps\": [\n    {\n      \"step_title\": \"analyze existing codebase\",\n      \"step_instructions\": \"Use GitHub Copilot to inspect your current code and identify outdated coding patterns, ambiguous variable names, and overly complex code blocks.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"identify patterns\",\n          \"description\": \"Run pattern recognition to highlight areas needing improvement.\",\n          \"bullets\": [\n            \"Locate inefficient loops and index-based iterations.\",\n            \"Detect ambiguous or non-descriptive variable names.\",\n            \"Spot large functions that are overly complex.\"\n          ]\n        }\n      ],\n      \"advice\": \"Review the AI-generated insights carefully to understand which patterns hinder readability.\"\n    },\n    {\n      \"step_title\": \"review AI explanations\",\n      \"step_instructions\": \"Utilize Claude Sonnet 3.7 to generate context-aware explanations for the identified issues from Copilot. Compare these insights to validate improvements.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"obtain detailed explanations\",\n          \"description\": \"Gather clear justifications for each suggested change.\",\n          \"bullets\": [\n            \"Understand why modern coding patterns enhance performance and readability.\",\n            \"Confirm that suggestions align with current best practices.\"\n          ]\n        }\n      ],\n      \"advice\": \"Ensure the explanations provide a clear rationale that supports the planned refactoring.\"\n    },\n    {\n      \"step_title\": \"apply naming and structure improvements\",\n      \"step_instructions\": \"Implement AI suggestions by refactoring variable names and restructuring functions for clarity and modularity.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"rename and reorganize\",\n          \"description\": \"Improve code clarity by updating names and adding documentation.\",\n          \"bullets\": [\n            \"Rename variables and functions to be more descriptive.\",\n            \"Break down large functions into smaller, focused components.\",\n            \"Introduce docstrings and inline comments to explain logic.\"\n          ]\n        }\n      ],\n      \"advice\": \"Focus on making your code self-explanatory, reducing the effort needed for future modifications.\"\n    },\n    {\n      \"step_title\": \"perform code refactoring\",\n      \"step_instructions\": \"Use GitHub Copilot to execute the refactoring process, breaking down complex blocks into modular functions and applying modern coding constructs.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"refactor code blocks\",\n          \"description\": \"Simplify annoying code complexities by applying best practices.\",\n          \"bullets\": [\n            \"Extract repeated logic into separate functions.\",\n            \"Replace verbose loops with concise structures like list comprehensions.\"\n          ]\n        }\n      ],\n      \"advice\": \"Keep a backup of the original code to allow rollbacks if necessary.\"\n    },\n    {\n      \"step_title\": \"validate and document changes\",\n      \"step_instructions\": \"Test your refactored code thoroughly and update documentation using AI-generated insights to record improvements.\",\n      \"sub_steps\": [\n        {\n          \"title\": \"testing and final documentation\",\n          \"description\": \"Ensure changes work correctly and document the improvements.\",\n          \"bullets\": [\n            \"Run unit tests and review changes with peers.\",\n            \"Generate updated documentation and coding comments.\",\n            \"Record improvements and lessons learned for future reference.\"\n          ]\n        }\n      ],\n      \"advice\": \"Confirm that all modifications adhere to team coding standards and enhance maintainability.\"\n    }\n  ],\n  \"resources\": [\n    {\n      \"url\": \"https://docs.github.com/en/copilot/copilot-chat-cookbook/refactoring-code\",\n      \"title\": \"Refactoring code - GitHub Docs\",\n      \"type\": \"tool\",\n      \"section\": \"Copilot Chat Cookbook / Refactoring Code\"\n    },\n    {\n      \"url\": \"https://docs.github.com/en/copilot/using-github-copilot/guides-on-using-github-copilot/refactoring-code-with-github-copilot\",\n      \"title\": \"Refactoring code with GitHub Copilot - GitHub Docs\",\n      \"type\": \"tool\",\n      \"section\": \"Guides on using GitHub Copilot / Refactoring Code\"\n    },\n    {\n      \"url\": \"https://docs.github.com/en/enterprise-cloud@latest/copilot/example-prompts-for-github-copilot-chat/refactoring-code/improving-code-readability-and-maintainability\",\n      \"title\": \"Improving code readability and maintainability - GitHub Enterprise Cloud Docs\",\n      \"type\": \"tool\",\n      \"section\": \"Example Prompts for Copilot Chat / Refactoring Code\"\n    },\n    {\n      \"url\": \"https://docs.github.com/en/copilot/using-github-copilot/ai-models/using-claude-sonnet-in-github-copilot\",\n      \"title\": \"Using Claude Sonnet in Copilot Chat - GitHub Docs\",\n      \"type\": \"tool\",\n      \"section\": \"Using AI Models / Using Claude Sonnet\"\n    }\n  ],\n  \"metadata\": {\n    \"id\": \"\",\n    \"title\": \"Improve code readability and maintainability\",\n    \"family\": \"Core Skills\",\n    \"ai_tool\": \"Coding Assistants\",\n    \"objective\": \"Leverage GitHub Copilot and Claude Sonnet 3.7 to identify and implement modern coding patterns, suggest clearer variable names and function structures, and refactor complex code blocks into more maintainable components, while providing clear explanations for each improvement.\",\n    \"description\": \"Refactor existing code to improve its readability and maintainability. This use case aims to make the codebase easier to understand and modify, reducing technical debt and improving long-term productivity.\",\n    \"prerequisites\": [\n      \"Writing clear code comments\",\n      \"Understanding code structure\",\n      \"Basic algorithmic thinking\",\n      \"Familiarity with code completion tools\",\n      \"Basic understanding of natural language processing\"\n    ],\n    \"time_estimate\": \"25 minutes\",\n    \"steps\": [],\n    \"tool\": \"GitHub Copilot\",\n    \"department\": [\n      \"SWE\"\n    ],\n    \"role\": [\n      \"agnostic\"\n    ],\n    \"mode\": \"agentic\",\n    \"model\": \"claude-sonnet-3.7\",\n    \"coding_language\": \"agnostic\"\n  },\n  \"citations\": [\n    {\n      \"url\": \"https://www.qodo.ai/blog/evolution-code-refactoring-tools-ai-efficiency/\",\n      \"title\": \"The Evolution of Code Refactoring Tools: Harnessing AI for Efficiency - Qodo\",\n      \"relevance_score\": 0.8\n    },\n    {\n      \"url\": \"https://docs.pieces.app/build/glossary/terms/ai-code-refactoring\",\n      \"title\": \"AI Code Refactoring | Pieces for Developers\",\n      \"relevance_score\": 0.75\n    },\n    {\n      \"url\": \"https://www.moderne.ai/blog/ai-assisted-refactoring-in-the-moderne-platform\",\n      \"title\": \"Making AI more accurate for automated code refactoring | Moderne\",\n      \"relevance_score\": 0.75\n    },\n    {\n      \"url\": \"https://www.restack.io/p/ai-improve-answer-code-readability-cat-ai\",\n      \"title\": \"Improve Code Readability with AI | Restackio\",\n      \"relevance_score\": 0.8\n    },\n    {\n      \"url\": \"https://spacelift.io/blog/ai-coding-assistant-tools\",\n      \"title\": \"17 Best AI-Powered Coding Assistant Tools in 2025\",\n      \"relevance_score\": 0.7\n    },\n    {\n      \"url\": \"https://www.qodo.ai/blog/best-ai-coding-assistant-tools/\",\n      \"title\": \"15 Best AI Coding Assistant Tools in 2025 - Qodo\",\n      \"relevance_score\": 0.7\n    },\n    {\n      \"url\": \"https://www.lindy.ai/blog/best-ai-for-coding\",\n      \"title\": \"20 Best AI for Coding Tools to Boost Your Development Workflows in 2025 | Lindy\",\n      \"relevance_score\": 0.7\n    }\n  ]\n}"
}